# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T11:55:06+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class ConfigurationSchemaSet(BaseModel):
    configurations: Optional[List[Dict[str, Any]]] = Field(
        None,
        description='Custom configurations of the Content Type tab. Varies depending on the Content Type schema defined in the FastStore project.',
    )
    name: Optional[str] = Field(None, description='Name of the Content Type tab.')


class ContentType(BaseModel):
    configurationSchemaSets: Optional[List[ConfigurationSchemaSet]] = Field(
        None,
        description='Array with data of the `configurationSchemaSets` tabs specified in the FastStore project.',
    )
    id: Optional[str] = Field(
        None, description='Content Type identifier specified in the FastStore project.'
    )
    name: Optional[str] = Field(
        None, description='Content Type name specified in the FastStore project.'
    )


class FieldVCmsApiBuilderIdGetResponse(BaseModel):
    contentTypes: Optional[List[ContentType]] = Field(
        None, description='Array with data of each Content Type.'
    )


class Section(BaseModel):
    data: Optional[Dict[str, Any]] = Field(
        None,
        description='Custom field values of the Section. Varies depending on the Section schema defined in the FastStore project.',
    )
    id: Optional[str] = Field(None, description='Section ID.')
    name: Optional[str] = Field(None, description='Section name.')


class Datum(BaseModel):
    id: Optional[str] = Field(
        None, description='Document ID presented in the URL path of a CMS preview.'
    )
    name: Optional[str] = Field(
        None, description='Name of the page created via the CMS interface.'
    )
    parameters: Optional[Dict[str, Any]] = Field(
        None,
        description='Object with the configuration values of a `configurationSchemaSets` tab. Varies depending on the Content Type schema defined in the FastStore project.',
    )
    sections: Optional[List[Section]] = Field(
        None, description='Sections that compose the page.'
    )
    status: Optional[str] = Field(None, description='Current status of the page.')
    type: Optional[str] = Field(
        None, description='Name of the Content Type defined in the FastStore project.'
    )
    versionId: Optional[str] = Field(None, description='Version ID.')
    versionStatus: Optional[str] = Field(None, description='Version status.')


class FieldVCmsApiBuilderIdContentTypeGetResponse(BaseModel):
    data: Optional[List[Datum]] = Field(
        None, description='Array with data from all pages of the given Content Type.'
    )
    hasNextPage: Optional[bool] = Field(
        None, description='Indicates if there are more items to fetch.'
    )
    totalItems: Optional[int] = Field(None, description='Total number of results.')


class Section1(BaseModel):
    data: Dict[str, Any] = Field(
        ...,
        description='Content of the Section. Varies depending on the Section schema defined in the FastStore project.',
    )
    id: str = Field(..., description='Section ID.')
    name: str = Field(..., description='Section name.')


class FieldVCmsApiBuilderIdContentTypeDocumentIdGetResponse(BaseModel):
    id: str = Field(..., description='Document ID.')
    name: str = Field(..., description='Name of the page created in the CMS app.')
    sections: Optional[List[Section1]] = Field(
        None, description='Sections that compose the page.'
    )
    status: str = Field(..., description='Current status of the page.')
    type: str = Field(
        ..., description='Name of the Content Type defined in the FastStore project.'
    )
    versionId: Optional[str] = Field(None, description='Version ID.')
    versionStatus: Optional[str] = Field(None, description='Version status')
